// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: share.sql

package db

import (
	"context"
	"database/sql"
)

const createShare = `-- name: CreateShare :one
INSERT INTO share (
    expense_id,
    user_id,
    share_type,
    share_value
) VALUES (
$1, $2, $3 ,$4
) RETURNING id, expense_id, user_id, share_type, share_value, created_at, updated_at
`

type CreateShareParams struct {
	ExpenseID  int64           `json:"expense_id"`
	UserID     int64           `json:"user_id"`
	ShareType  string          `json:"share_type"`
	ShareValue sql.NullFloat64 `json:"share_value"`
}

func (q *Queries) CreateShare(ctx context.Context, arg CreateShareParams) (Share, error) {
	row := q.db.QueryRowContext(ctx, createShare,
		arg.ExpenseID,
		arg.UserID,
		arg.ShareType,
		arg.ShareValue,
	)
	var i Share
	err := row.Scan(
		&i.ID,
		&i.ExpenseID,
		&i.UserID,
		&i.ShareType,
		&i.ShareValue,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
